#include <vector>
#include <Eigen/Core>
#include "util.h"
#include "face.h"

/******************************************************************************/
//
// Face class. Computes geometric quantities, source/doublet influence
// coefficients at a point, etc.
// 
/******************************************************************************/

/******************************************************************************/
//
// Default constructor
//
/******************************************************************************/
Face::Face ()
{
  _sigma = 0.0;
  _mu = 0.0;
  _area = 0.0;
  _cen.resize(4);
  _norm.resize(4);
  _trans.resize(4,4);
  _invtrans.resize(4,4);
} 

/******************************************************************************/
//
// Sets source strength
//
/******************************************************************************/
void Face::setSourceStrength ( const double & sigin ) { _sigma = sigin; }

/******************************************************************************/
//
// Returns source strength
//
/******************************************************************************/
const double & Face::sourceStrength () const { return _sigma; }

/******************************************************************************/
//
// Sets doublet strength
//
/******************************************************************************/
void Face::setDoubletStrength ( const double & muin ) { _mu = muin; }

/******************************************************************************/
//
// Returns doublet strength
//
/******************************************************************************/
const double & Face::doubletStrength () const { return _mu; }

/******************************************************************************/
//
// Returns face area
//
/******************************************************************************/
const double & Face::area () const { return _area; }

/******************************************************************************/
//
// Returns centroid
//
/******************************************************************************/
const Eigen::Vector3d & Face::centroid () const { return _cen; }

/******************************************************************************/
//
// Returns normal vector
//
/******************************************************************************/
const Eigen::Vector3d & Face::normal () const { return _norm; }
