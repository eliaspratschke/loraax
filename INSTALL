Please note that LORAAX is currently in a pre-release stage, so if you want to
try it, you will have to compile it and install its dependencies yourself. When
the initial release is ready, binaries for Windows and Linux will be provided.

Compiling from source
================================================================================

Before you can build libxfoil, you will first need to install:

eigen3 (linear algebra library): http://eigen.tuxfamily.org
tinyxml2 (XML parser): http://www.grinninglizard.com/tinyxml2
libxfoil (Xfoil library): https://github.com/montagdude/libxfoil

LORAAX uses CMake to configure the build. The presence of these three required
packages is checked during the configuring stage. A typical build would use
commands like the following, starting from the main tree:

mkdir build
cd build
cmake ..
make
make install

In some cases, you may want or need to change some build flags. To see what
flags are available, first do the above commands, but do not do `make` or
`make install` yet. Instead, after running the cmake command, use ccmake to
list and edit flags:

ccmake ..

By default, after `make install`, LORAAX will be installed in /usr/local. The
install prefix can be changed by editing the CMAKE_INSTALL_PREFIX option. To
edit any of the flags from the command line rather than interactively with
ccmake, use syntax like the following:

-D${OPTION}=${VALUE}

For example,

-DCMAKE_INSTALL_PREFIX=${HOME}

To run LORAAX, first set up an input XML or try one of the provided sample
cases. Then type the command:

loraax input.xml

substituting the actual name of the XML file for input.xml. You should also try

loraax -h

to see what options are available, and reference the user guide for detailed
information on setting up, running, and postprocessing LORAAX cases.
